import * as React from 'react';
import Paper from '@mui/material/Paper';
import Table from '@mui/material/Table';
import TableBody from '@mui/material/TableBody';
import TableCell from '@mui/material/TableCell';
import TableContainer from '@mui/material/TableContainer';
import TableHead from '@mui/material/TableHead';
import TablePagination from '@mui/material/TablePagination';
import TableRow from '@mui/material/TableRow';
import { DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';

const EmployeeCard = ({ records }) => {
   const [open, setOpen] = useState(null);

  const handleClickOpen = (id) => {
    setOpen(id);
  };

  const handleClose = () => {
    setOpen(false);
  };

  const deleteHandler = (id) => {
    setRecords(records.filter((record) => record.id !== id));
  };
  const columns = [
    { id: 'number', label: 'Id', minWidth: 170, align: 'center' },
    { id: 'profile', label: 'Image', minWidth: 170, align: 'center' },

    {
      id: 'Name',
      label: 'Name',
      minWidth: 170,
      align: 'center',
      format: (value) => value.toLocaleString('en-US'),
    },
    {
      id: 'Role',
      label: 'Role',
      minWidth: 170,
      align: 'center',
      format: (value) => value.toLocaleString('en-US'),
    },
    {
      id: 'Contact',
      label: 'Contact',
      minWidth: 170,
      align: 'center',
      format: (value) => value.toFixed(2),
    },
  ];

  const rows = records;

  const [page, setPage] = React.useState(0);
  const [rowsPerPage, setRowsPerPage] = React.useState(10);

  const handleChangePage = (event, newPage) => {
    setPage(newPage);
  };

  const handleChangeRowsPerPage = (event) => {
    setRowsPerPage(+event.target.value);
    setPage(0);
  };

  return (
    <Paper sx={{ width: '100%', overflow: 'hidden' }}>
      <TableContainer sx={{ maxHeight: 450 }}>
        <Table stickyHeader aria-label='sticky table'>
          <TableHead>
            <TableRow>
              {columns.map((column) => (
                <TableCell
                  key={column.id}
                  align={column.align}
                  style={{ minWidth: column.minWidth }}
                >
                  {column.label}
                </TableCell>
              ))}
            </TableRow>
          </TableHead>
          <TableBody>
            {rows
              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)
              .map((row) => {
                return (
                  <TableRow hover role='checkbox' tabIndex={-1} key={row.id}>
                    <TableCell align={'center'} sx={{ width: '200px' }}>
                      <Avatar sx={{ width: '200px', height: '200px' }}>
                        <img src={`${row.image}`} alt={row.name} />
                      </Avatar>
                    </TableCell>
                    <TableCell align={'center'}>{row.name}</TableCell>
                    <TableCell align={'center'}>{row.role}</TableCell>
                    <TableCell align={'center'}>{row.contact}</TableCell>
                    <TableCell align={'center'}>
                      <Button onClick={() => handleClickOpen(records.id)}>
                        Edit
                      </Button>
                      <Button onClick={() => deleteHandler(records.id)}>
                        Delete
                      </Button>
                      <Box>
                        <Dialog
                          open={open}
                          onClose={handleClose}
                          PaperProps={{
                            component: 'form',
                            onSubmit: (e) => {
                              e.preventDefault();
                            },
                          }}
                          sx={{
                            maxHeight: 'auto',
                          }}
                        >
                          <DialogTitle>Update a New Employee</DialogTitle>
                          <DialogContent>
                            <TextField
                              label='Name'
                              name='name'
                              margin='dense'
                              fullWidth
                              variant='standard'
                            />
                            <TextField
                              label='Role'
                              name='role'
                              margin='normal'
                              variant='standard'
                              sx={{ marginRight: '40px' }}
                            />
                            <TextField
                              label='Contact'
                              name='contact'
                              margin='normal'
                              variant='standard'
                            />
                            <TextField
                              type='file'
                              margin='normal'
                              name='image'
                            />
                          </DialogContent>
                          <DialogActions>
                            <Button onClick={handleClose} variant='outlined'>
                              Cancel
                            </Button>
                            <Button type='submit' variant='contained'>
                              Update
                            </Button>
                          </DialogActions>
                        </Dialog>
                      </Box>
                    </TableCell>
                  </TableRow>
                );
              })}
          </TableBody>
        </Table>
      </TableContainer>
      <TablePagination
        rowsPerPageOptions={[10, 25, 100]}
        component='div'
        count={rows.length}
        rowsPerPage={rowsPerPage}
        page={page}
        onPageChange={handleChangePage}
        onRowsPerPageChange={handleChangeRowsPerPage}
      />
    </Paper>
  );
};

export default EmployeeCard;
